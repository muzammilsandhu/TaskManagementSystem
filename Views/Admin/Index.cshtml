@using System.Security.Claims

@{
    var user = Context.User;
    bool canCreate = user.HasClaim("Permission", AppPermissions.CanCreateTask);
}

@if (canCreate)
{
<a href="/Admin/Create" class="btn btn-primary">Create Task</a>
}

@model List<TaskManagementSystem.Models.TaskItem>

    @{
    ViewData["Title"] = "Admin - Manage Tasks";
    }

    <h2>Admin Panel - Manage Tasks</h2>

    <!-- Show Create Task Button Only If User Can Create -->
    @if (canCreate)
{
    <a class="btn btn-primary mb-3" asp-action="Create">Add Task</a>
}

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Status</th>
                <th>Assigned User</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model)
        {
            <tr>
                <td>@task.Title</td>
                <td>@task.Description</td>
                <td>@task.Status</td>
                <td>@(task.AssignedUser != null ? task.AssignedUser.Email : "Not Assigned")</td>
                <td>
                    <!-- Show Edit Button Only If User Can Edit -->
                    @if (user.HasClaim("Permission", AppPermissions.CanEditTask))
                    {
                    <a class="btn btn-sm btn-warning" asp-action="Edit" asp-route-id="@task.Id">Edit</a>
                    }

                    <!-- Show Delete Button Only If User Can Delete -->
                    @if (user.HasClaim("Permission", AppPermissions.CanDeleteTask))
                    {
                    <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@task.Id">Delete</a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
